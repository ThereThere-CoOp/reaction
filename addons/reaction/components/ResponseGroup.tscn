[gd_scene load_steps=2 format=3 uid="uid://bwn1m3sr6rhlp"]

[sub_resource type="GDScript" id="GDScript_qfbce"]
script/source = "@tool
class_name ResponseGroup
extends MarginContainer

var current_database: ReactionDatabase

var current_parent_object : Resource

var response_group_object: ReactionResponseGroupItem

@onready var response_group_scene: PackedScene = preload(\"res://addons/reaction/components/ResponseGroup.tscn\")
@onready var response_component_scene: PackedScene = preload(\"res://addons/reaction/components/ResponseComponent.tscn\")

@onready var add_response_group_button : Button = %AddResponseGroupButton
@onready var add_response_menu : MenuButton = %AddResponsesMenuButton
@onready var responses_count_label : Label = %ResponsesCountLabel
@onready var show_hide_responses_button : CheckButton = %ShowHideResponsesButton
@onready var responses_container : VBoxContainer = %ResponsesContainer
@onready var responses_scroll_container : ScrollContainer = %ResponsesScrollContainer
@onready var _responses_scrollbar: VScrollBar = responses_scroll_container.get_v_scroll_bar()

var _responses_scroll_to_end = false

func _ready():
	_responses_scrollbar.changed.connect(_on_responses_scroll_changed)
	ReactionSignals.database_selected.connect(_on_database_selected)
	add_response_group_button.pressed.connect(_on_add_response_group_button_pressed)
	show_hide_responses_button.toggled.connect(_on_show_hide_responses_button_toggled)
	
	var responses_menu_popup = add_response_menu.get_popup()
	responses_menu_popup.clear()
	
	for response_type in ReactionGlobals.responses_types.values():
		responses_menu_popup.add_item(response_type)
	
	var index = 1
	for response in response_group_object.responses.values():
		var new_response_component_scene = response_component_scene.instantiate()
		
		if response is ReactionResponseGroupItem:
			var new_response_group = response_group_scene.instantiate()
			new_response_group.setup(current_database, response, response_group_object)
			new_response_component_scene.setup(current_database, response, response_group_object, index, new_response_group)
			
		if response is ReactionResponseItem:
			new_response_component_scene.setup(response, response_group_object, index)
		
		new_response_component_scene.response_removed.connect(_on_removed_response)
		responses_container.add_child(new_response_component_scene)
		index += 1
		
	update_responses_control()
		
		
func update_responses_control() -> void:
	var responses_count = response_group_object.responses.size()
	responses_count_label.text = \"Responses: (%d)\" % responses_count
	show_hide_responses_button.disabled = bool(responses_count == 0)
	responses_scroll_container.visible = bool(responses_count > 0)
		
	
func setup(database: ReactionDatabase, response_group: ReactionResponseGroupItem, parent_object: Resource) -> void:
	current_database = database
	response_group_object = response_group
	current_parent_object = parent_object
	
	
### signals

func _on_database_selected(database: ReactionDatabase) -> void:
	current_database = database


func _on_responses_scroll_changed() -> void:
	if _responses_scroll_to_end:
		responses_scroll_container.set_v_scroll(int(_responses_scrollbar.max_value))
		
		
func _on_add_response_group_button_pressed():
	var new_response_group = response_group_object.add_new_response_group()
	current_database.save_data()
	
	var new_response_group_scene = response_group_scene.instantiate()
	new_response_group_scene.setup(current_database, new_response_group, response_group_object)
	var new_response_component_scene = response_component_scene.instantiate()
	var new_index = response_group_object.responses.size()
		
	new_response_component_scene.setup(current_database, new_response_group, response_group_object, new_index, new_response_group_scene)
	new_response_component_scene.response_removed.connect(_on_removed_response)
	responses_container.add_child(new_response_component_scene)
	update_responses_control()
		
		
func _on_show_hide_responses_button_toggled(toggled_on):
	if toggled_on:
		show_hide_responses_button.text = \"Hide responses\"
	else:
		show_hide_responses_button.text = \"Show responses\"
		
	responses_scroll_container.visible = toggled_on
	
	
func _on_removed_response(index: int) -> void:
	var responses_components = responses_container.get_children()
	if index < response_group_object.responses.size():
		for i in range(index, responses_components.size()):
			responses_components[i].update_index((i - 1))
			
	update_responses_control()
"

[node name="Respons" type="MarginContainer"]
custom_minimum_size = Vector2(500, 0)
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/margin_left = 5
theme_override_constants/margin_top = 5
theme_override_constants/margin_right = 5
theme_override_constants/margin_bottom = 5
script = SubResource("GDScript_qfbce")

[node name="Rows" type="VBoxContainer" parent="."]
layout_mode = 2
theme_override_constants/separation = 20

[node name="ButtonsContainer" type="HBoxContainer" parent="Rows"]
layout_mode = 2
theme_override_constants/separation = 20

[node name="AddResponseGroupButton" type="Button" parent="Rows/ButtonsContainer"]
unique_name_in_owner = true
layout_mode = 2
text = "Add response group"

[node name="AddResponsesMenuButton" type="MenuButton" parent="Rows/ButtonsContainer"]
unique_name_in_owner = true
layout_mode = 2
text = "Add response
"
item_count = 1
popup/item_0/text = "Dialog"
popup/item_0/id = 0

[node name="ResponsesControllersContainer" type="HBoxContainer" parent="Rows"]
layout_mode = 2

[node name="ResponsesCountLabel" type="Label" parent="Rows/ResponsesControllersContainer"]
unique_name_in_owner = true
layout_mode = 2
text = "Responses: (0)"

[node name="ShowHideResponsesButton" type="CheckButton" parent="Rows/ResponsesControllersContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 0
text = "Show responses"

[node name="ResponsesScrollContainer" type="ScrollContainer" parent="Rows"]
unique_name_in_owner = true
visible = false
custom_minimum_size = Vector2(0, 100)
layout_mode = 2
size_flags_vertical = 3

[node name="ResponsesContainer" type="VBoxContainer" parent="Rows/ResponsesScrollContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
theme_override_constants/separation = 10
